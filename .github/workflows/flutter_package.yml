name: Flutter Package Workflow

on:
  workflow_call:
    inputs:
      analyze_directories:
        required: false
        type: string
        default: "lib test"
      concurrency:
        required: false
        type: number
        default: 4
      coverage_excludes:
        required: false
        type: string
        default: ""
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: ""
      format_directories:
        required: false
        type: string
        default: "lib test"
      format_line_length:
        required: false
        type: string
        default: "120"
      min_coverage:
        required: false
        type: number
        default: 50
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      setup:
        required: false
        type: string
        default: ""
      test_optimization:
        required: false
        type: boolean
        default: true
      test_recursion:
        required: false
        type: boolean
        default: false
      working_directory:
        required: false
        type: string
        default: "."
      package_get_excludes:
        required: false
        type: string
        default: "!*"

jobs:
  build:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ${{inputs.runs_on}}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{inputs.flutter_version}}
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: 📦 Install Dependencies
        run: flutter pub get

      - name: ⚙️ Run Setup
        if: "${{inputs.setup != ''}}"
        run: ${{inputs.setup}}

      #      - name: ⚙️ Run Formatting
      #        run: dart format --line-length 120 .
      #      #        run: dart format --line-length ${{inputs.format_line_length}} ${{inputs.format_directories}}


      - name: ⚙️️ Fix
        run: dart fix --apply

      - name: 🧪 Run Tests
        run: flutter test

#      - name: 📊 Check Code Coverage
#        uses: VeryGoodOpenSource/very_good_coverage@v2
#        with:
#          path: ${{inputs.working_directory}}/coverage/lcov.info
#          exclude: ${{inputs.coverage_excludes}}
#          min_coverage: ${{inputs.min_coverage}}
