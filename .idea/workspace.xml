<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="14ffac51-edf6-4e1f-b226-814fcc9c2f92" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/lib/app_initializer.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/config/theme/color_scheme.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/core/widgets/responsive_layout_wrapper.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/features/presentation/bloc/most_viewed_article_bloc.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/features/presentation/bloc/most_viewed_article_event.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/features/presentation/bloc/most_viewed_article_state.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/features/screens/mobile_portrait/most_viewed_articles_mobile_portrait_view.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/features/screens/most_viewed_articles_screen.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/core_test/widgets_test/responsive_layout_wrapper_test.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Dart_Packages.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Dart_Packages.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/android/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/android/app/src/main/AndroidManifest.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/app/view/app.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/app/view/app.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/bootstrap.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/bootstrap.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/core/use_case/user_case.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/core/use_case/user_case.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/features/most_viewed_articles/domain/user_cases/get_most_viewed_articles.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/features/most_viewed_articles/domain/user_cases/get_most_viewed_articles.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/injection_container.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/injection_container.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/main_development.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/main_development.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/main_production.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/main_production.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/main_staging.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/main_staging.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pubspec.lock" beforeDir="false" afterPath="$PROJECT_DIR$/pubspec.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pubspec.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/pubspec.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/features_test/most_viewed_articles_test/domain_test/use_cases_test/get_most_viewed_articles_test.dart" beforeDir="false" afterPath="$PROJECT_DIR$/test/features_test/most_viewed_articles_test/domain_test/use_cases_test/get_most_viewed_articles_test.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/injection_container_test.dart" beforeDir="false" afterPath="$PROJECT_DIR$/test/injection_container_test.dart" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dart File" />
        <option value="Dart Test File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProjectId" id="2XQf2WDQAem1neg1QAYNsR0OfrX" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "cidr.known.project.marker": "true",
    "code.cleanup.on.save": "true",
    "dart.analysis.tool.window.visible": "false",
    "io.flutter.reload.alreadyRun": "true",
    "last_opened_file_path": "/Users/juriba/projects/flutterprojects/ny_articles_clean_architecture/lib",
    "rearrange.code.on.save": "true",
    "settings.editor.selected.configurable": "actions.on.save",
    "show.migrate.to.gradle.popup": "false"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/lib" />
      <recent name="$PROJECT_DIR$/test/core_test" />
      <recent name="$PROJECT_DIR$/lib/core" />
      <recent name="$PROJECT_DIR$/test/features_test/most_viewed_articles_test/domain_test" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/test" />
      <recent name="$PROJECT_DIR$/lib/features/presentation/bloc" />
    </key>
  </component>
  <component name="RunManager" selected="Flutter.development">
    <configuration name="initializeDependencies is successful on the first attempt" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="initializeDependencies is successful on the first attempt" />
      <option name="testFile" value="$PROJECT_DIR$/test/app_initializer_test_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="should register ArticleRepository" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="should register ArticleRepository" />
      <option name="testFile" value="$PROJECT_DIR$/test/injection_container_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="should register GetMostViewedArticlesUseCase" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="should register GetMostViewedArticlesUseCase" />
      <option name="testFile" value="$PROJECT_DIR$/test/injection_container_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in app_initializer_test_test.dart" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testFile" value="$PROJECT_DIR$/test/app_initializer_test_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in test" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testDir" value="$PROJECT_DIR$/test" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Flutter Test.tests in test" />
        <item itemvalue="Flutter Test.tests in app_initializer_test_test.dart" />
        <item itemvalue="Flutter Test.initializeDependencies is successful on the first attempt" />
        <item itemvalue="Flutter Test.should register GetMostViewedArticlesUseCase" />
        <item itemvalue="Flutter Test.should register ArticleRepository" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="14ffac51-edf6-4e1f-b226-814fcc9c2f92" name="Changes" comment="" />
      <created>1698566018097</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1698566018097</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <inline-watch fileUrl="file://$PROJECT_DIR$/lib/features/most_viewed_articles/data/repositories/article_repository_imp.dart" line="17">
        <watch expression="watch" language="Dart" />
      </inline-watch>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="../../../../projects/flutterprojects/ny_articles_clean_architecture/coverage/lcov.info" NAME="tests in responsive_layout_wrapper_test.dart Coverage Results" MODIFIED="1698597368395" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="FlutterCoverageRunner" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>